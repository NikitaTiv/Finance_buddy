from abc import ABC, abstractmethod
from dataclasses import dataclass

from buttons_base import ClearCacheMixin, GetAttrMixin


@dataclass
class AddExpensesButtonData(ClearCacheMixin, GetAttrMixin):
    text: str = 'ü´∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏'


@dataclass
class LimitsButtonData(ClearCacheMixin, GetAttrMixin):
    text: str = 'üöß –õ–∏–º–∏—Ç—ã'


@dataclass
class BaseBackDataClass(GetAttrMixin, ABC):
    text: str = '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'

    @property
    @abstractmethod
    def callback_data(self) -> str:
        pass


@dataclass
class BackToCatsButtonData(BaseBackDataClass):
    callback_data: str = 'cat'


@dataclass
class BackToLimitsButtonData(BaseBackDataClass):
    callback_data: str = 'limit'


@dataclass
class BackToTransactionsButtonData(BaseBackDataClass):
    callback_data: str = 'trans'


@dataclass
class AddCategoryButtonData(GetAttrMixin):
    text: str = '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
    callback_data: str = 'add_category'


@dataclass
class RemoveCategoryButtonData(GetAttrMixin):
    text: str = '‚ùå –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
    callback_data: str = 'rem_cat'


@dataclass
class ShowNextCategoriesButtonData(GetAttrMixin):
    text: str = '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ üîΩ'


@dataclass
class ShowPrevCategoriesButtonData(GetAttrMixin):
    text: str = '–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üîº'


@dataclass
class ShowLastTransactionsButtonData(GetAttrMixin):
    text: str = '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π üí∏'
    callback_data: str = 'show_transactions'
